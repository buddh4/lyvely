#!/bin/sh

# a simple bash function to write out the failure message neatly
print_error_check () {
    printf "[ERROR(git-pre-commit)] Rush has found mismatching package dependencies in your project.\n"
    printf "\tPlease fix them before committing your work.\n"
    printf "\t(Run 'rush check' or 'rush check --verbose' to identify conflicts.)\n"
}

# run rush check and use the above print_error function if the command has a non zero exit code
rush check>/dev/null || ( print_error_check && exit 1 )

# a simple bash function to write out the failure message neatly
print_error_depcheck () {
    printf "[ERROR(git-pre-commit)] Rush has found unused or missing package dependencies in your project.\n"
    printf "\tPlease fix them before committing your work.\n"
    printf "\t(Run 'rush depcheck' or 'rush depcheck --verbose' to identify conflicts.)\n"
}

# run rush check and use the above print_error function if the command has a non zero exit code
rush depcheck>/dev/null || ( print_error_depcheck && exit 1 )

# a simple bash function to write out the failure message neatly
print_error_deps () {
    printf "[ERROR(git-pre-commit)] Rush has found dependencies issues in your project.\n"
    printf "\tPlease fix them before committing your work.\n"
    printf "\t(Run 'rush deps' or 'rush deps --verbose' to identify conflicts.)\n"
}

# run rush check and use the above print_error function if the command has a non zero exit code
rush deps>/dev/null || ( print_error_deps && exit 1 )
