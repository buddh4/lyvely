import dayjs from 'dayjs';
import { CalendarDate, IDateTime, UnitType } from '../interfaces';
import 'dayjs/locale/de';
import 'dayjs/locale/en';
export declare class DayJsDateTime implements IDateTime {
    instance: dayjs.Dayjs;
    isDateTime: boolean;
    constructor(date: CalendarDate | dayjs.Dayjs, locale?: string, timezone?: string);
    add(value: number, unit?: UnitType): IDateTime;
    time(h?: number, m?: number, s?: number, ms?: number): DayJsDateTime;
    unixTs(): number;
    subtract(value: number, unit?: UnitType): IDateTime;
    utc(preserveTime?: boolean): IDateTime;
    toDate(): Date;
    date(): number;
    date(value: number): IDateTime;
    day(): number;
    day(value: number): IDateTime;
    week(): number;
    week(value: number): IDateTime;
    weekday(): number;
    weekday(value: number): IDateTime;
    weekYear(): number;
    isoWeek(): number;
    isoWeek(value: number): IDateTime;
    isoWeekday(): number;
    isoWeekday(value: number): IDateTime;
    isoWeekYear(): number;
    quarter(): number;
    quarter(value: number): IDateTime;
    month(): number;
    month(value: number): IDateTime;
    year(): number;
    year(value: number): IDateTime;
    format(template: string): string;
}
export declare function dateTimeFactory(date?: CalendarDate, utc?: boolean, locale?: string, timezone?: string): IDateTime;
export declare function useDayJsDateTimeAdapter(): void;
